<!DOCTYPE HTML><html><head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

<title>第三节：样式和伸缩属性</title>
    <!--mark |wiz_custom_css| for wizeditor replace it-->
<link rel="stylesheet" name="wiz_tmp_editor_style" href="rn_note_3_files/fonts_14.css"><style id="wiz_custom_css">html, body {            font-size: 15px;        }        body {            font-family: Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;            line-height: 1.6;            margin: 0;            padding: 20px 15px;            padding: 1.33rem 1rem;        }        h1, h2, h3, h4, h5, h6 {            margin: 20px 0 10px;            margin: 1.33rem 0 0.667rem;            padding: 0;            font-weight: bold;        }        h1 {            font-size: 21px;            font-size: 1.4rem;        }        h2 {            font-size: 20px;            font-size: 1.33rem;        }        h3 {            font-size: 18px;            font-size: 1.2rem;        }        h4 {            font-size: 17px;            font-size: 1.13rem;        }        h5 {            font-size: 15px;            font-size: 1rem;        }        h6 {            font-size: 15px;            font-size: 1rem;            color: #777777;            margin: 1rem 0;        }        div, p, ul, ol, dl, li {            margin: 0;        }        blockquote, table, pre, code {            margin: 8px 0;        }        ul, ol {            padding-left: 32px;            padding-left: 2.13rem;        }        blockquote {            padding: 0 12px;            padding: 0 0.8rem;        }        blockquote > :first-child {            margin-top: 0;        }        blockquote > :last-child {            margin-bottom: 0;        }        img {            border: 0;            max-width: 100%;            height: auto !important;            margin: 2px 0;        }        table {            border-collapse: collapse;            border: 1px solid #bbbbbb;        }        td, th {            padding: 4px 8px;            border-collapse: collapse;            border: 1px solid #bbbbbb;			        }        @media only screen and (-webkit-max-device-width: 1024px), only screen and (-o-max-device-width: 1024px), only screen and (max-device-width: 1024px), only screen and (-webkit-min-device-pixel-ratio: 3), only screen and (-o-min-device-pixel-ratio: 3), only screen and (min-device-pixel-ratio: 3) {            html, body {                font-size: 17px;            }            body {                line-height: 1.7;                padding: 0.75rem 0.9375rem;                color: #353c47;            }            h1 {                font-size: 2.125rem;            }            h2 {                font-size: 1.875rem;            }            h3 {                font-size: 1.625rem;            }            h4 {                font-size: 1.375rem;            }            h5 {                font-size: 1.125rem;            }            h6 {                color: inherit;            }            ul, ol {                padding-left: 2.5rem;            }            blockquote {                padding: 0 0.9375rem;            }        }</style><link rel="stylesheet"  name="wiz_tmp_editor_style" href="rn_note_3_files/fonts_18.css"><link type="text/css" rel="stylesheet" id="wiz_code_highlight_link" href="rn_note_3_files/wiz_code_highlight_11.css"></head>

<body spellcheck="false" >一、样式<div>方式一：直接写json赋值控件的style属性，缺点是不能复用。</div><div><div><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code class="language-js"><span class="pun">&lt;</span><span class="typ">Image</span><span class="pln"> source</span><span class="pun">={</span><span class="pln">pic</span><span class="pun">}</span><span class="pln"> style</span><span class="pun">={{</span><span class="pln">width</span><span class="pun">:</span><span class="pln"> </span><span class="lit">193</span><span class="pun">,</span><span class="pln"> height</span><span class="pun">:</span><span class="pln"> </span><span class="lit">110</span><span class="pun">}}/&gt;</span></code></li></ol></pre></div><div>方式二：创建样式对象，通过对象的达到复用</div></div><div><div><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code class="language-js"><span class="kwd">import</span><span class="pln"> </span><span class="typ">React</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> from </span><span class="str">'react'</span><span class="pun">;</span></code></li><li class="L1"><code class="language-js"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">AppRegistry</span><span class="pun">,</span><span class="pln"> </span><span class="typ">StyleSheet</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Text</span><span class="pun">,</span><span class="pln"> </span><span class="typ">View</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> from </span><span class="str">'react-native'</span><span class="pun">;</span></code></li><li class="L2"><code class="language-js"></code></li><li class="L3"><code class="language-js"><span class="kwd">class</span><span class="pln"> </span><span class="typ">LotsOfStyles</span><span class="pln"> extends </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code class="language-js"><span class="pln">  render</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code class="language-js"><span class="pln">    </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span></code></li><li class="L6"><code class="language-js"><span class="pln">      </span><span class="pun">&lt;</span><span class="typ">View</span><span class="pun">&gt;</span></code></li><li class="L7"><code class="language-js"><span class="pln">        </span><span class="pun">&lt;</span><span class="typ">Text</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">red</span><span class="pun">}&gt;</span><span class="pln">just red</span><span class="pun">&lt;/</span><span class="typ">Text</span><span class="pun">&gt;</span></code></li><li class="L8"><code class="language-js"><span class="pln">        </span><span class="pun">&lt;</span><span class="typ">Text</span><span class="pln"> style</span><span class="pun">={</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">bigblue</span><span class="pun">}&gt;</span><span class="pln">just bigblue</span><span class="pun">&lt;/</span><span class="typ">Text</span><span class="pun">&gt;</span></code></li><li class="L9"><code class="language-js"><span class="pln">        </span><span class="pun">&lt;</span><span class="typ">Text</span><span class="pln"> style</span><span class="pun">={[</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">bigblue</span><span class="pun">,</span><span class="pln"> styles</span><span class="pun">.</span><span class="pln">red</span><span class="pun">]}&gt;</span><span class="pln">bigblue</span><span class="pun">,</span><span class="pln"> then red</span><span class="pun">&lt;/</span><span class="typ">Text</span><span class="pun">&gt;</span></code></li><li class="L0"><code class="language-js"><span class="pln">        </span><span class="pun">&lt;</span><span class="typ">Text</span><span class="pln"> style</span><span class="pun">={[</span><span class="pln">styles</span><span class="pun">.</span><span class="pln">red</span><span class="pun">,</span><span class="pln"> styles</span><span class="pun">.</span><span class="pln">bigblue</span><span class="pun">]}&gt;</span><span class="pln">red</span><span class="pun">,</span><span class="pln"> then bigblue</span><span class="pun">&lt;/</span><span class="typ">Text</span><span class="pun">&gt;</span></code></li><li class="L1"><code class="language-js"><span class="pln">      </span><span class="pun">&lt;/</span><span class="typ">View</span><span class="pun">&gt;</span></code></li><li class="L2"><code class="language-js"><span class="pln">    </span><span class="pun">);</span></code></li><li class="L3"><code class="language-js"><span class="pln">  </span><span class="pun">}</span></code></li><li class="L4"><code class="language-js"><span class="pun">}</span></code></li><li class="L5"><code class="language-js"></code></li><li class="L6"><code class="language-js"><span class="kwd">const</span><span class="pln"> styles </span><span class="pun">=</span><span class="pln"> </span><span class="typ">StyleSheet</span><span class="pun">.</span><span class="pln">create</span><span class="pun">({</span></code></li><li class="L7"><code class="language-js"><span class="pln">  bigblue</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L8"><code class="language-js"><span class="pln">    color</span><span class="pun">:</span><span class="pln"> </span><span class="str">'blue'</span><span class="pun">,</span></code></li><li class="L9"><code class="language-js"><span class="pln">    fontWeight</span><span class="pun">:</span><span class="pln"> </span><span class="str">'bold'</span><span class="pun">,</span></code></li><li class="L0"><code class="language-js"><span class="pln">    fontSize</span><span class="pun">:</span><span class="pln"> </span><span class="lit">30</span><span class="pun">,</span></code></li><li class="L1"><code class="language-js"><span class="pln">  </span><span class="pun">},</span></code></li><li class="L2"><code class="language-js"><span class="pln">  red</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code class="language-js"><span class="pln">    color</span><span class="pun">:</span><span class="pln"> </span><span class="str">'red'</span><span class="pun">,</span></code></li><li class="L4"><code class="language-js"><span class="pln">  </span><span class="pun">},</span></code></li><li class="L5"><code class="language-js"><span class="pun">});</span></code></li><li class="L6"><code class="language-js"></code></li><li class="L7"><code class="language-js"><span class="typ">AppRegistry</span><span class="pun">.</span><span class="pln">registerComponent</span><span class="pun">(</span><span class="str">'LotsOfStyles'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="typ">LotsOfStyles</span><span class="pun">);</span></code></li></ol></pre></div><div><br></div></div><div>二、flexBox（类似android flexLayout）</div><div>一、概述</div><div>当控件的高度是确定的时候，可以指定宽高，rn中的宽高是和像素密度相关的单位，相当于android 中dp,sp，当宽高自动适应的时候使用flex属性。</div><div>二、属性概述</div><div><div><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code class="language-js"><span class="com">/**</span></code></li><li class="L1"><code class="language-js"><span class="com">   * 定义全局样式</span></code></li><li class="L2"><code class="language-js"><span class="com">   *关于主轴（primary axis）和次轴（secondary axis）：如果主轴是行, 则次轴是列，反之亦然，主轴即flexDirection定义的方向</span></code></li><li class="L3"><code class="language-js"><span class="com">   */</span></code></li><li class="L4"><code class="language-js"><span class="pln">  </span><span class="kwd">const</span><span class="pln"> style</span><span class="pun">=</span><span class="typ">StyleSheet</span><span class="pun">.</span><span class="pln">create</span><span class="pun">({</span></code></li><li class="L5"><code class="language-js"><span class="pln">    flexLayout</span><span class="pun">:{</span></code></li><li class="L6"><code class="language-js"><span class="pln">      </span><span class="com">//权重</span></code></li><li class="L7"><code class="language-js"><span class="pln">      flex</span><span class="pun">:</span><span class="lit">1</span><span class="pun">,</span></code></li><li class="L8"><code class="language-js"><span class="pln">      </span><span class="com">//子控件排列方向，横向或者竖向flexDirection `column`</span></code></li><li class="L9"><code class="language-js"><span class="pln">      flexDirection</span><span class="pun">:</span><span class="str">'row'</span><span class="pun">,</span></code></li><li class="L0"><code class="language-js"><span class="pln">      </span><span class="com">//子控件在主轴方向的分布，主轴开始，末尾，中间，还是均匀分布</span></code></li><li class="L0"><span style="color: rgb(147, 161, 161);">      //available options are flex-start, center, flex-end, space-around, and space-between</span></li><li class="L1"><code class="language-js"><span class="pln">      justifyContent</span><span class="pun">:</span><span class="str">'space-between'</span><span class="pun">,</span></code></li><li class="L2"><code class="language-js"><span class="pln">      </span><span class="com">//子控件次轴分布方式 Available options are flex-start, center, flex-end, and stretch</span></code></li><li class="L3"><code class="language-js"><span class="pln">      </span><span class="com">//对于stretch属性，想要产生作用，沿着次轴的孩子控件必须不能设置固定的大小</span></code></li><li class="L4"><code class="language-js"><span class="pln">      </span><span class="com">//（如flexDirection为row时，想要子控件在列方向上及高度上拉伸，则控件的高度不能设置,要去掉控件的高度属性）</span></code></li><li class="L5"><code class="language-js"><span class="pln">      alignItems</span><span class="pun">:</span><span class="str">'center'</span></code></li><li class="L5"><span class="pln">    </span><span class="pun">}</span></li><li class="L8"><code class="language-js"><span class="pln">  </span><span class="pun">});</span></code></li></ol></pre></div><div><br></div></div><div><br></div><div><br></div></body></html>